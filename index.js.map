{"version":3,"file":"index.js","sources":["src/helpers/index.js","src/templates/index.js","src/index.js"],"sourcesContent":["\n/**\n * \n * @param {string} heightString in the format `<ft>' <in>\"`\n * @returns \n */\nexport function parseHeightString(heightString) {\n    // Regular expression to match patterns for feet and inches\n    const inchesRegex = /('|\\s)(\\d{1,3}\")/gm;\n    const feetRegex = /^(\\d{1,3}|\\d\\s|\\d\")/gm;\n\n    // Execute the regular expressions on the input height string\n    const inchesMatch = heightString.match(inchesRegex);\n    const feetMatch = heightString.match(feetRegex);\n\n    const feet = feetMatch[0];\n    const inches = inchesMatch[0].replace(/[\"\\s]/g, '');\n    // Return the height as a string in the format \"<feet>.<inches>\"\n    return feet + '.' + inches;\n}\n\n/**\n * Converts decimal feet to feet and inches. E.g. 6.5 feet, means \"six and a half feet\", which would be `6' 6\"`\n * @param {string} decimalFeet // 0.1, 1.3\n * @returns {string} feet and inches \n */\nexport function convertDecimalToHeightString(decimalFeet) {\n    // Split the decimal feet into integer and fractional parts\n    const integerFeet = Math.floor(decimalFeet);\n    const fractionalFeet = Math.round((decimalFeet - integerFeet) * 1e10) / 1e10;\n    // Convert the fractional part to inches (1 foot = 12 inches)\n    const inches = Math.floor(fractionalFeet * 12);\n    // Return the result as a string in the format \"feet' inches\"\"\n    return `${integerFeet}' ${inches}\"`;\n}\n\nexport function getLongJumpDistance(strength, type='standing') {\n    const distance = (type == 'running' ? strength : strength / 2).toString();\n    return distance;\n}\n\nexport function calculateLongJump(strength, type='standing') {\n    const distance = getLongJumpDistance(strength, type);\n    const heightString = convertDecimalToHeightString(distance);\n    return heightString;\n}\n\nexport function getHighJumpDistance(strMod, type='standing') {\n    const distance = (type == 'running' ? 3 + Number(strMod) : (3 + Number(strMod)) / 2).toString();\n    return distance;\n}\n\nexport function calculateHighJump(strMod, type='standing') {\n    // 3 + your Strength modifier\n    const distance = getHighJumpDistance(strMod, type);\n    return convertDecimalToHeightString(distance);\n    \n}\n\n/**\n * @param {string} height <ft>.<in> \n * @returns <ft>.<in>*1.5\n */\nexport function calculateReach(height) {\n    // split height string by '.' character\n    const split = height.split('.');\n    const feet = Number(split[0]);\n    const inches = Number(split[1]);\n    const halfInches = inches / 2;\n    const halfFeet = feet / 2;\n    let reachFeet = feet + halfFeet;\n    let reachInches = inches + halfInches;\n    if(reachInches > 12) {\n        reachFeet += 1;\n        reachInches -= 12;\n    }\n    // const distance = String(reachFeet) + '.' + String(reachInches);\n    const decimalHeight = convertFeetAndInchesToDecimal(reachFeet, reachInches);\n    console.log(decimalHeight);\n    return convertDecimalToHeightString(decimalHeight);\n}\n\nexport function convertFeetAndInchesToDecimal(feet, inches) {\n    // Convert feet to inches and add to inches value\n    const totalInches = Number(feet) * 12 + Number(inches);\n    // Convert total inches to decimal feet\n    const decimalFeet = totalInches / 12;\n    const val = decimalFeet.toFixed(1); // Return as a string with one decimal place\n    return val;\n\n}\n","export const longJumpTextTemplate = `\n<div class=\"geoidesic-5e-jump-calc\">\n    <h2>{{5eJumpCalc.longJumpTitle}}</h2>\n    <p>PHB p182</p>\n    <p><strong>Running jump</strong> ({{5eJumpCalc.10FtFirst}}): <span class=\"lozenge\">{{running_jump}}</span></p>\n    <p><strong>Standing jump</strong>: <span class=\"lozenge\">{{standing_jump}}</span></p>\n    {{5eJumpCalc.longJumpPost}}\n</div>\n`;\n\n\nexport const highJumpTextTemplate = `\n<div class=\"geoidesic-5e-jump-calc\">\n    <h2>High Jump</h2>\n    <p>PHB p182</p>\n    <p><strong>Running jump</strong> ({{5eJumpCalc.10FtFirst}}): <span class=\"lozenge\">{{running_jump}}</span></p>\n    <p><strong>Standing jump</strong>: <span class=\"lozenge\">{{standing_jump}}</span></p>\n    <p><strong>Reach</strong>: <span class=\"lozenge\">+{{reach}}</span></p>\n    {{5eJumpCalc.highJumpPost}}\n</div>\n`;\n\nexport const sheetContent = `\n    <div class=\"pills-group\">\n        <h3 class=\"icon\">\n            <i class=\"fas fa-person-running\"></i>\n            <span class=\"roboto-upper\">Jump Calculator</span>\n        </h3>\n        <ul class=\"pills\">\n            <li class=\"pill geoidesic-5e-button\">\n                <span class=\"label\" id=\"renderHighJumpButton\">High jump</span>\n            </li>\n            <li class=\"pill geoidesic-5e-button\">\n                <span class=\"label\" id=\"renderLongJumpButton\">Long jump</span>\n            </li>\n        </ul>\n    </div>\n`;\n","import '../styles/init.scss'; // Import any styles as this includes them in the build.\nimport {parseHeightString, calculateLongJump, calculateHighJump, calculateReach } from '~/helpers'\nimport {longJumpTextTemplate, highJumpTextTemplate, sheetContent } from '~/templates'\n\nHooks.on(\"renderActorSheet5eCharacter\", (app, html, data) => {\n    // console.log(html);\n    const lastPillGroup = html.find('.pills-group:last-of-type');\n    lastPillGroup.after(sheetContent);\n\n    const strength = app.document.system.abilities.str.value || 10;\n    const strMod = app.document.system.abilities.str.mod || 0;\n    const height = parseHeightString(app.document.system.details.height) || '6.0';\n\n    // Add event listener to the button\n    const renderHighJumpButton = html.find('#renderHighJumpButton');\n    renderHighJumpButton.on('click', () => {\n        // Render chat message\n        ChatMessage.create({\n            content: highJumpTextTemplate\n            .replace(\"{{running_jump}}\", calculateHighJump(strMod, 'running'))\n            .replace(\"{{standing_jump}}\", calculateHighJump(strMod, 'standing'))\n            .replace(\"{{5eJumpCalc.highJumpTitle}}\", game.i18n.localize('5eJumpCalc.highJumpTitle'))\n            .replace(\"{{5eJumpCalc.highJumpPost}}\", game.i18n.localize('5eJumpCalc.highJumpPost'))\n            .replace(\"{{5eJumpCalc.10FtFirst}}\", game.i18n.localize('5eJumpCalc.10FtFirst'))\n            .replace(\"{{reach}}\", calculateReach(height))\n            ,\n            speaker: ChatMessage.getSpeaker({ actor: app.actor }),\n        });\n    });\n    const renderLongJumpButton = html.find('#renderLongJumpButton');\n    renderLongJumpButton.on('click', () => {\n        // Render chat message\n        ChatMessage.create({\n            content: longJumpTextTemplate\n            .replace(\"{{running_jump}}\", calculateLongJump(strength, 'running'))\n            .replace(\"{{standing_jump}}\", calculateLongJump(strength, 'standing'))\n            .replace(\"{{5eJumpCalc.longJumpTitle}}\", game.i18n.localize('5eJumpCalc.longJumpTitle'))\n            .replace(\"{{5eJumpCalc.longJumpPost}}\", game.i18n.localize('5eJumpCalc.longJumpPost'))\n            .replace(\"{{5eJumpCalc.10FtFirst}}\", game.i18n.localize('5eJumpCalc.10FtFirst'))\n            ,\n            speaker: ChatMessage.getSpeaker({ actor: app.actor }),\n        });\n    });\n});\n"],"names":["convertDecimalToHeightString","decimalFeet","integerFeet","Math","floor","fractionalFeet","round","calculateLongJump","strength","type","distance","toString","calculateHighJump","strMod","Number","calculateReach","height","split","feet","inches","reachFeet","reachInches","decimalHeight","totalInches","toFixed","console","log","longJumpTextTemplate","highJumpTextTemplate","Hooks","on","app","html","data","find","after","document","system","abilities","str","value","mod","heightString","inchesMatch","match","replace","details","ChatMessage","create","content","game","i18n","localize","speaker","getSpeaker","actor"],"mappings":"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"}